{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Music Player API",
    "description": "API documentation for the Music Player backend",
    "contact": {
      "name": "Niraj Kumar Verma",
      "email": "nirajverma.75way@gmail.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    { "name": "User", "description": "User-related APIs" },
    { "name": "Song", "description": "Song-related APIs" },
    { "name": "Playlist", "description": "Playlist-related APIs" },
    { "name": "PlaylistSong", "description": "PlaylistSong-related APIs" },
    { "name": "LikeSong", "description": "LikeSong-related APIs" }
  ],
  "schemes": ["http"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer Token in the format: Bearer <token>"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            },
            "example": {
              "name": "John Doe Updated",
              "username": "john_doe_updated",
              "bio": "Updated bio",
              "email": "john.doe.updated@example.com",
              "password": "newsecurepassword123"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Partial update of a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            },
            "example": {
              "bio": "Updated bio"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["email", "password"]
            },
            "example": {
              "email": "john.doe@example.com",
              "password": "securepassword123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token"
          },
          "400": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/users/forget-password": {
      "post": {
        "tags": ["User"],
        "summary": "User Forget password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" }
              },
              "required": ["email"]
            },
            "example": {
              "email": "john.doe@example.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code send to your mail"
          },
          "400": {
            "description": "Invalid email"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": ["User"],
        "summary": "User Reset password",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["code", "password"]
            },
            "example": {
              "code": "******",
              "password": "newsecurepassword123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password Saved"
          },
          "400": {
            "description": "Invalid code or password"
          }
        }
      }
    },
    "/users/ref-token": {
      "get": {
        "tags": ["User"],
        "summary": "Refresh Token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token Refresh successful"
          },
          "400": {
            "description": "Token Not Available "
          }
        }
      }
    },
    "/songs": {
      "get": {
        "tags": ["Song"],
        "summary": "Get all songs",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of songs",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Song" }
            }
          }
        }
      },
      "post": {
        "tags": ["Song"],
        "summary": "Upload a new song",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Song" }
          }
        ],
        "responses": {
          "201": { "description": "Song uploaded successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/songs/{id}": {
      "get": {
        "tags": ["Song"],
        "summary": "Get song by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Song ID"
          }
        ],
        "responses": {
          "200": { "description": "Song details", "schema": { "$ref": "#/definitions/Song" } },
          "404": { "description": "Song not found" }
        }
      },
      "put": {
        "tags": ["Song"],
        "summary": "Update song by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Song ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Song" }
          }
        ],
        "responses": {
          "200": { "description": "Song updated successfully" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Song not found" }
        }
      },
      "patch": {
        "tags": ["Song"],
        "summary": "Partially update song by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Song ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Song" }
          }
        ],
        "responses": {
          "200": { "description": "Song updated successfully" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Song not found" }
        }
      },
      "delete": {
        "tags": ["Song"],
        "summary": "Delete song by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Song ID"
          }
        ],
        "responses": {
          "200": { "description": "Song deleted successfully" },
          "404": { "description": "Song not found" }
        }
      }
    },

    "/playlist": {
      "get": {
        "tags": ["Playlist"],
        "summary": "Get all playlist",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of playlist",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Playlist" }
            }
          }
        }
      },
      "post": {
        "tags": ["Playlist"],
        "summary": "Upload a new playlist",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Playlist" }
          }
        ],
        "responses": {
          "201": { "description": "Playlist uploaded successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/playlist/{id}": {
      "get": {
        "tags": ["Playlist"],
        "summary": "Get playlist by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Playlist ID"
          }
        ],
        "responses": {
          "200": { "description": "Playlist details", "schema": { "$ref": "#/definitions/Playlist" } },
          "404": { "description": "Playlist not found" }
        }
      },
      "put": {
        "tags": ["Playlist"],
        "summary": "Update song by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Playlist ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Playlist" }
          }
        ],
        "responses": {
          "200": { "description": "Playlist updated successfully" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Playlist not found" }
        }
      },
      "patch": {
        "tags": ["Playlist"],
        "summary": "Partially update song by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Playlist ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Playlist" }
          }
        ],
        "responses": {
          "200": { "description": "Playlist updated successfully" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Playlist not found" }
        }
      },
      "delete": {
        "tags": ["Playlist"],
        "summary": "Delete playlist by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Playlist ID"
          }
        ],
        "responses": {
          "200": { "description": "Playlist deleted successfully" },
          "404": { "description": "Playlist not found" }
        }
      }
    },

"/playlist-song": {
  "get": {
    "tags": ["PlaylistSong"],
    "summary": "Get all playlist-song",
    "security": [{ "Bearer": [] }],
    "responses": {
      "200": {
        "description": "List of playlist-song",
        "schema": {
          "type": "array",
          "items": { "$ref": "#/definitions/PlaylistSong" }
        }
      }
    }
  },
  "post": {
    "tags": ["PlaylistSong"],
    "summary": "Upload a new song",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": { "$ref": "#/definitions/PlaylistSong" }
      }
    ],
    "responses": {
      "201": { "description": "PlaylistSong uploaded successfully" },
      "400": { "description": "Invalid input" }
    }
  }
},
"/playlist-song/{id}": {
  "get": {
    "tags": ["PlaylistSong"],
    "summary": "Get song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "PlaylistSong ID"
      }
    ],
    "responses": {
      "200": { "description": "PlaylistSong details", "schema": { "$ref": "#/definitions/PlaylistSong" } },
      "404": { "description": "PlaylistSong not found" }
    }
  },
  "put": {
    "tags": ["PlaylistSong"],
    "summary": "Update song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "PlaylistSong ID"
      },
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": { "$ref": "#/definitions/PlaylistSong" }
      }
    ],
    "responses": {
      "200": { "description": "PlaylistSong updated successfully" },
      "400": { "description": "Invalid input" },
      "404": { "description": "PlaylistSong not found" }
    }
  },
  "patch": {
    "tags": ["PlaylistSong"],
    "summary": "Partially update song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "PlaylistSong ID"
      },
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": { "$ref": "#/definitions/PlaylistSong" }
      }
    ],
    "responses": {
      "200": { "description": "PlaylistSong updated successfully" },
      "400": { "description": "Invalid input" },
      "404": { "description": "PlaylistSong not found" }
    }
  },
  "delete": {
    "tags": ["PlaylistSong"],
    "summary": "Delete song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "PlaylistSong ID"
      }
    ],
    "responses": {
      "200": { "description": "PlaylistSong deleted successfully" },
      "404": { "description": "PlaylistSong not found" }
    }
  }
},
"/like-song": {
  "get": {
    "tags": ["LikeSong"],
    "summary": "Get all like-song",
    "security": [{ "Bearer": [] }],
    "responses": {
      "200": {
        "description": "List of like-song",
        "schema": {
          "type": "array",
          "items": { "$ref": "#/definitions/LikeSong" }
        }
      }
    }
  },
  "post": {
    "tags": ["LikeSong"],
    "summary": "Upload a new song",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": { "$ref": "#/definitions/LikeSong" }
      }
    ],
    "responses": {
      "201": { "description": "LikeSong uploaded successfully" },
      "400": { "description": "Invalid input" }
    }
  }
},
"/like-song/{id}": {
  "get": {
    "tags": ["LikeSong"],
    "summary": "Get song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "LikeSong ID"
      }
    ],
    "responses": {
      "200": { "description": "LikeSong details", "schema": { "$ref": "#/definitions/LikeSong" } },
      "404": { "description": "LikeSong not found" }
    }
  },
  "put": {
    "tags": ["LikeSong"],
    "summary": "Update song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "LikeSong ID"
      },
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": { "$ref": "#/definitions/LikeSong" }
      }
    ],
    "responses": {
      "200": { "description": "LikeSong updated successfully" },
      "400": { "description": "Invalid input" },
      "404": { "description": "LikeSong not found" }
    }
  },
  "patch": {
    "tags": ["LikeSong"],
    "summary": "Partially update song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "LikeSong ID"
      },
      {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": { "$ref": "#/definitions/LikeSong" }
      }
    ],
    "responses": {
      "200": { "description": "LikeSong updated successfully" },
      "400": { "description": "Invalid input" },
      "404": { "description": "LikeSong not found" }
    }
  },
  "delete": {
    "tags": ["LikeSong"],
    "summary": "Delete song by ID",
    "security": [{ "Bearer": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "LikeSong ID"
      }
    ],
    "responses": {
      "200": { "description": "LikeSong deleted successfully" },
      "404": { "description": "LikeSong not found" }
    }
  }
}
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" },
        "role": { "type": "string" }
      }
    },
    "Song": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "artist": { "type": "string" },
        "album": { "type": "string" },
        "genre": { "type": "string" },
        "lyrics": { "type": "string" },
        "audioUrl": { "type": "string" }
      }
    },
    "Playlist": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" }
      }
    },
    "PlaylistSong": {
      "type": "object",
      "properties": {
        "playlistId": { "type": "string" },
        "songId": { "type": "string" }
      }
    },
    "LikeSong": {
      "type": "object",
      "properties": {
        "userId": { "type": "string" },
        "songId": { "type": "string" }
      }
    }
  }
}
